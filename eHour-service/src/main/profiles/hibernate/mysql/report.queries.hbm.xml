<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="Report.getHoursPerMonthPerAssignmentForUsersAndProjects">
	<![CDATA[
		SELECT SUM(ENTRY.HOURS) AS totalHours,
		       SUM(ENTRY.HOURS * PAG.HOURLY_RATE) AS totalTurnOver,
		       DATE_FORMAT(ENTRY_DATE, '%U %Y') AS entryDate,
		       CUST.CUSTOMER_ID AS customerId,
		       CUST.NAME AS customerName,
		       CUST.CODE AS customerCode,
		       PAG.PROJECT_ID AS projectId,
		       PAG.USER_ID AS userId,
		       USR.FIRST_NAME AS userFirstName,
		       USR.LAST_NAME AS userLastName,
		       PAG.ROLE AS assignmentDesc,
		       PRJ.PROJECT_ID AS projectId,
		       PRJ.NAME AS projectName,
		       PAG.ASSIGNMENT_ID AS assignmentId,
		       ENTRY.COMMENT AS "comment",
		       ENTRY.DISPLAY_ORDER AS "displayOrder"
		FROM TIMESHEET_ENTRY ENTRY,
		     CUSTOMER CUST,
		     PROJECT PRJ,
		     PROJECT_ASSIGNMENT PAG,
		     USERS USR
		WHERE ENTRY.ASSIGNMENT_ID = PAG.ASSIGNMENT_ID AND
		      PAG.PROJECT_ID = PRJ.PROJECT_ID AND
		      PRJ.CUSTOMER_ID = CUST.CUSTOMER_ID AND
		      PAG.USER_ID = USR.USER_ID AND
		      PAG.USER_ID IN (:userIdList) AND
		      PAG.PROJECT_ID IN (:projectIdList) AND
		      (ENTRY.ENTRY_DATE >= :dateStart AND
		      ENTRY.ENTRY_DATE <= :dateEnd)
		GROUP BY PAG.ASSIGNMENT_ID,
		         DATE_FORMAT(ENTRY_DATE, '%U %Y')
		         ]]>
	</sql-query>
	
    <sql-query name="Report.getHoursPerMonthPerAssignmentForUsers">
	<![CDATA[	
		SELECT SUM(ENTRY.HOURS) AS totalHours,
		       SUM(ENTRY.HOURS * PAG.HOURLY_RATE) AS totalTurnOver,
		       DATE_FORMAT(ENTRY_DATE, '%U %Y') AS entryDate,
		       CUST.CUSTOMER_ID AS customerId,
		       CUST.NAME AS customerName,
		       CUST.CODE AS customerCode,
		       PAG.PROJECT_ID AS projectId,
		       PAG.USER_ID AS userId,
		       USR.FIRST_NAME AS userFirstName,
		       USR.LAST_NAME AS userLastName,
		       PAG.ROLE AS assignmentDesc,
		       PRJ.PROJECT_ID AS projectId,
		       PRJ.NAME AS projectName,
		       PAG.ASSIGNMENT_ID AS assignmentId,
		       ENTRY.COMMENT AS "comment",
		       ENTRY.DISPLAY_ORDER AS "displayOrder"
		FROM TIMESHEET_ENTRY ENTRY,
		     CUSTOMER CUST,
		     PROJECT PRJ,
		     PROJECT_ASSIGNMENT PAG,
		     USERS USR
		WHERE ENTRY.ASSIGNMENT_ID = PAG.ASSIGNMENT_ID AND
		      PAG.PROJECT_ID = PRJ.PROJECT_ID AND
		      PRJ.CUSTOMER_ID = CUST.CUSTOMER_ID AND
		      PAG.USER_ID = USR.USER_ID AND
		      PAG.USER_ID IN (:userIdList) AND
		      (ENTRY.ENTRY_DATE >= :dateStart AND
		      ENTRY.ENTRY_DATE <= :dateEnd)
		GROUP BY PAG.ASSIGNMENT_ID,
		         DATE_FORMAT(ENTRY_DATE, '%U %Y')
		         ]]>		         
	</sql-query>
	
    <sql-query name="Report.getHoursPerMonthPerAssignmentForProjects">
	<![CDATA[	
		SELECT SUM(ENTRY.HOURS) AS totalHours,
		       SUM(ENTRY.HOURS * PAG.HOURLY_RATE) AS totalTurnOver,
		       DATE_FORMAT(ENTRY_DATE, '%U %Y') AS entryDate,
		       CUST.CUSTOMER_ID AS customerId,
		       CUST.NAME AS customerName,
		       CUST.CODE AS customerCode,
		       PAG.PROJECT_ID AS projectId,
		       PAG.USER_ID AS userId,
		       USR.FIRST_NAME AS userFirstName,
		       USR.LAST_NAME AS userLastName,
		       PAG.ROLE AS assignmentDesc,
		       PRJ.PROJECT_ID AS projectId,
		       PRJ.NAME AS projectName,
		       PAG.ASSIGNMENT_ID AS assignmentId,
		       ENTRY.COMMENT AS "comment",
		       ENTRY.DISPLAY_ORDER AS "displayOrder"
		FROM TIMESHEET_ENTRY ENTRY,
		     CUSTOMER CUST,
		     PROJECT PRJ,
		     PROJECT_ASSIGNMENT PAG,
		     USERS USR
		WHERE ENTRY.ASSIGNMENT_ID = PAG.ASSIGNMENT_ID AND
		      PAG.PROJECT_ID = PRJ.PROJECT_ID AND
		      PAG.PROJECT_ID IN (:projectIdList) AND
		      PRJ.CUSTOMER_ID = CUST.CUSTOMER_ID AND
		      PAG.USER_ID = USR.USER_ID AND
		      (ENTRY.ENTRY_DATE >= :dateStart AND
		      ENTRY.ENTRY_DATE <= :dateEnd)
		GROUP BY PAG.ASSIGNMENT_ID,
		         DATE_FORMAT(ENTRY_DATE, '%U %Y')
		         ]]>		         
	</sql-query>	
	
    <sql-query name="Report.getHoursPerMonthPerAssignment">
	<![CDATA[	
		SELECT SUM(ENTRY.HOURS) AS totalHours,
		       SUM(ENTRY.HOURS * PAG.HOURLY_RATE) AS totalTurnOver,
		       DATE_FORMAT(ENTRY_DATE, '%U %Y') AS entryDate,
		       CUST.CUSTOMER_ID AS customerId,
		       CUST.NAME AS customerName,
		       CUST.CODE AS customerCode,
		       PAG.PROJECT_ID AS projectId,
		       PAG.USER_ID AS userId,
		       USR.FIRST_NAME AS userFirstName,
		       USR.LAST_NAME AS userLastName,
		       PAG.ROLE AS assignmentDesc,
		       PRJ.PROJECT_ID AS projectId,
		       PRJ.NAME AS projectName,
		       PAG.ASSIGNMENT_ID AS assignmentId,
		       ENTRY.COMMENT AS "comment",
		       ENTRY.DISPLAY_ORDER AS "displayOrder"
		FROM TIMESHEET_ENTRY ENTRY,
		     CUSTOMER CUST,
		     PROJECT PRJ,
		     PROJECT_ASSIGNMENT PAG,
		     USERS USR
		WHERE ENTRY.ASSIGNMENT_ID = PAG.ASSIGNMENT_ID AND
		      PAG.PROJECT_ID = PRJ.PROJECT_ID AND
		      PRJ.CUSTOMER_ID = CUST.CUSTOMER_ID AND
		      PAG.USER_ID = USR.USER_ID AND
		      (ENTRY.ENTRY_DATE >= :dateStart AND
		      ENTRY.ENTRY_DATE <= :dateEnd)
		GROUP BY PAG.ASSIGNMENT_ID,
		         DATE_FORMAT(ENTRY_DATE, '%U %Y')
		         ]]>		         
	</sql-query>	

    <sql-query name="Report.getHoursPerDayForAssignment">
	<![CDATA[	
		SELECT SUM(ENTRY.HOURS) AS totalHours,
		       SUM(ENTRY.HOURS * PAG.HOURLY_RATE) AS totalTurnOver,
		       ENTRY_DATE AS dayDate,
		       CUST.CUSTOMER_ID AS customerId,
		       CUST.NAME AS customerName,
		       CUST.CODE AS customerCode,
		       PAG.PROJECT_ID AS projectId,
		       PAG.USER_ID AS userId,
		       USR.FIRST_NAME AS userFirstName,
		       USR.LAST_NAME AS userLastName,
		       PAG.ROLE AS assignmentDesc,
		       PRJ.PROJECT_ID AS projectId,
		       PRJ.NAME AS projectName,
		       PAG.ASSIGNMENT_ID AS assignmentId,
		       ENTRY.COMMENT AS "comment",
		       ENTRY.DISPLAY_ORDER AS "displayOrder"
		FROM TIMESHEET_ENTRY ENTRY,
		     CUSTOMER CUST,
		     PROJECT PRJ,
		     PROJECT_ASSIGNMENT PAG,
		     USERS USR
		WHERE ENTRY.ASSIGNMENT_ID = PAG.ASSIGNMENT_ID AND
		      PAG.PROJECT_ID = PRJ.PROJECT_ID AND
		      PRJ.CUSTOMER_ID = CUST.CUSTOMER_ID AND
		      PAG.USER_ID = USR.USER_ID AND
		      PAG.ASSIGNMENT_ID IN (:assignmentId) AND
		      (ENTRY.ENTRY_DATE >= :dateStart AND
		      ENTRY.ENTRY_DATE <= :dateEnd)
		GROUP BY PAG.ASSIGNMENT_ID,
		         ENTRY_DATE,
		         ENTRY.DISPLAY_ORDER
		         ]]>		         
	</sql-query>	
</hibernate-mapping>