Installation instructions Linux

	eHour requires a Java JDK, the Apache Tomcat servlet container and a MySQL database to be installed.
	
	If you're upgrading an existing installation of eHour, please see the {{{upgrading.html} upgrade instructions}};
	do not execute these steps more than once.
	
	For Windows install instructions, {{{install_windows.html} see here}}.
	
* Download eHour

	Download a {{{download.html} binary distribution of eHour}} and unpack the downloaded archive in a temp dir.
	
* Java 1.5+

	eHour is built in Java so you'll need a Java JDK, 1.5 or newer, before anything can happen.
	
	Download and install the latest version from {{{http://java.sun.com/javase/downloads/index.jsp}http://java.sun.com/javase/downloads/index.jsp}}.

* MySQL 5+ installation and configuration	

	For now only MySQL is supported as the back-end database.
	If you don't have MySQL, version 5 or better, installed download it from  {{{http://dev.mysql.com/downloads/mysql/5.0.html#downloads}http://dev.mysql.com/downloads/mysql/5.0.html#downloads}}
	and follow the installation instructions.
	
** Create database

	First create a MySQL database named <<eHour>>. 
	
	Execute the following command:

+--	
	mysqladmin create ehour -u user -p
+--
	Replace <<user>> with a database user that has enough priviliges to create a new database.
	
** Install eHour database

	With the ehour database created it's time to create the database tables and fill 'm with some static data.
	In the temp dir where you unpacked the binary distribution you'll find an <<sql>> directory. In this
	directory is a <<fresh.mysql.sql>> script, execute it by running the following command in a DOS box or shell:
	
+--
	mysql ehour -u user -p < fresh.mysql.sql
+--
	Again replace <<user>> with the appropiate MySQL user.
	
	Now that the database is set up it's time to set up the final part, Apache Tomcat
	
* Apache Tomcat 5.5 installation and configuration

** Install Tomcat

	Apache Tomcat acts as the container server which runs the application. As of now eHour was only tested with Tomcat 5.5
	
	If you don't have Tomcat installed yet, download it at {{{http://tomcat.apache.org/download-55.cgi#5.5.20}http://tomcat.apache.org/download-55.cgi#5.5.20}}.

	Install instructions for Tomcat can be found {{{http://tomcat.apache.org/tomcat-5.5-doc/setup.html} on their site}}.
	
** Install the MySQL JDBC connector

	To allow Tomcat to access the MySQL database you need to download an install the MySQL JDBC connector.
	
	Download it from {{{http://dev.mysql.com/downloads/connector/j/5.0.html}http://dev.mysql.com/downloads/connector/j/5.0.html}}.
	
	Locate the common/lib directory in your Tomcat install directory and copy <<mysql-connector-5.x.x-bin.jar>> from the 
	downloaded archive there.
	
** Hook up eHour to Tomcat

	First make sure that Tomcat isn't running. 

	In the <<conf/tomcat>> directory of the eHour distribution you can find the file <<ehour.xml>>.
	
	Edit this file in your favourite text-editor and replace the following:
	
*-----*------*
 @ehour.db.username | the MySQL username
*-----*------*
 @ehour.db.password | the MySQL password
*-----*------*
 @ehour.db.hostname | the hostname/IP address of your MySQL server
*-----*------*
 @ehour.db.name | the eHour MySQL database
*-----*------*

	After editing, copy this file to the <<conf/Catalina/localhost>> directory in your Tomcat install directory
	
** Install eHour in Tomcat

	In the install directory of Tomcat create a directory named <<deploy>>
	
	From the eHour distribution copy the <<ehour-0.6.war>> into this directory.
	
* Start it all up !

	MySQL is probably already running, otherwise you wouldn't be able to install the database in a previous step.
	
	Start Tomcat by running <<startup.sh>> in the bin directory of the Tomcat installation directory.
	
	Congratulations! You just installed eHour, now proceed with the {{{first_time_usage.html}usage instructions}}!
	
* Troubleshooting

	After starting Tomcat, in the logs directory of Tomcat a logfile called <<ehour.log>> should appear. If it's not there make sure
	you followed the step 'Hookup eHour to Tomcat'
	
	
		
	
	
	

	
	

